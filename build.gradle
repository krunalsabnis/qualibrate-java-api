buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	
    repositories {
		mavenCentral()
		maven {
		  url 'https://plugins.gradle.org/m2/'
		  url 'https://repo.spring.io/libs-snapshot'
        }
	}

	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath 'org.asciidoctor:asciidoctorj:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.7'
        classpath 'se.transmode.gradle:gradle-docker:1.2' 
        classpath 'commons-codec:commons-codec:1.9'
	}
}


plugins {
  id 'org.asciidoctor.convert' version '1.5.3'
}
  

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

description = 'qualibrate-java-api'

def javaVersion = JavaVersion.VERSION_1_8
sourceCompatibility = javaVersion
targetCompatibility = javaVersion


tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}


group = 'com.kru'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8



repositories {
	mavenCentral()
}

ext {
  snippetsDir = file('build/generated-snippets')
}


dependencies {
    compile 'io.springfox:springfox-swagger2:2.4.0'
    compile 'io.springfox:springfox-swagger-ui:2.4.0'

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    //compile 'org.springframework.boot:spring-boot-starter-data-rest'
	    
    compile 'org.liquibase:liquibase-core'
	
	compile 'org.projectlombok:lombok:1.16.18'

	runtime 'mysql:mysql-connector-java:6.0.4'
	runtime 'com.h2database:h2:1.4.190'


    
    compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.7'
    compile 'org.web3j:web3j-spring-boot-starter:1.0.0'
    //asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:1.5.7'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:1.2.1.RELEASE'

	testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.restdocs:spring-restdocs-core:1.2.1.RELEASE'
}


jar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'public/docs'
    }
}


test {
    outputs.dir snippetsDir
    
    testLogging {
        events "passed", "skipped", "failed"
    }
}



//======== task for generating asciidoc for API guide ========//

/*
asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    outputDir = file('site')
    dependsOn test
    backends('html5', 'pdf')
}
*/

//======== task for generating docker image with every build - not in use as of now ========//
/*
task buildDocker (type:Docker, dependsOn: build) {
	applicationName = jar.baseName
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}
*/